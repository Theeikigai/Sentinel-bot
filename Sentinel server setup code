const { SlashCommandBuilder, ChannelType, PermissionFlagsBits } = require('discord.js');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('server')
    .setDescription('Full server setup with roles, channels, tickets, and permissions')
    .addSubcommand(sub =>
      sub.setName('setup')
        .setDescription('Start the complete server setup')
    )
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),

  async execute(interaction) {
    const guild = interaction.guild;
    const owner = await guild.fetchOwner();

    await interaction.reply({ content: 'Setting up your server...', ephemeral: true });

    // === Create Roles ===
    const roleNames = [
      'Staff', 'Moderator', 'Head Moderator', 'Head Admin',
      'Admin', 'Partnership Manager', 'Trial Mod'
    ];
    const createdRoles = {};

    for (const name of roleNames) {
      const role = await guild.roles.create({ name });
      createdRoles[name] = role;
    }

    // === Create Categories and Channels ===
    const categories = {
      'Support': ['tickets'],
      'Main': ['announcements', 'food', 'levels'],
      'Giveaways': ['giveaway', 'nitro-giveaway'],
      'Tournaments': ['post-your-tournaments'],
      'Logs': ['transcript']
    };

    for (const [categoryName, channels] of Object.entries(categories)) {
      const category = await guild.channels.create({
        name: categoryName,
        type: ChannelType.GuildCategory,
      });

      for (const channelName of channels) {
        await guild.channels.create({
          name: channelName,
          type: ChannelType.GuildText,
          parent: category,
        });
      }
    }

    // === Setup Complete ===
    await interaction.followUp({ content: 'Server setup complete!', ephemeral: true });
  }
};