const { SlashCommandBuilder, PermissionFlagsBits, ChannelType, EmbedBuilder } = require('discord.js');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('tournament')
    .setDescription('Create a new tournament and its structure')
    .addStringOption(option =>
      option.setName('name')
        .setDescription('Name of the tournament')
        .setRequired(true))
    .addIntegerOption(option =>
      option.setName('max_participants')
        .setDescription('Max participants (default 8, max 200)')
        .setRequired(false))
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),

  async execute(interaction) {
    const name = interaction.options.getString('name');
    let maxParticipants = interaction.options.getInteger('max_participants') || 8;
    if (maxParticipants > 200) maxParticipants = 200;

    const guild = interaction.guild;

    // Create roles
    const playerRole = await guild.roles.create({
      name: `${name} Player`,
      color: 'Green',
      reason: 'Tournament player role',
    });

    const spectatorRole = await guild.roles.create({
      name: `${name} Spectator`,
      color: 'Blue',
      reason: 'Tournament spectator role',
    });

    const adminRole = await guild.roles.create({
      name: `${name} Tournament Admin`,
      color: 'Red',
      reason: 'Tournament admin role',
    });

    // Create channels category
    const category = await guild.channels.create({
      name: `${name} Tournament`,
      type: ChannelType.GuildCategory,
    });

    // Create tournament-specific channels
    const playerChannel = await guild.channels.create({
      name: 'player-chat',
      type: ChannelType.GuildText,
      parent: category.id,
      permissionOverwrites: [
        {
          id: guild.roles.everyone.id,
          deny: ['ViewChannel'],
        },
        {
          id: playerRole.id,
          allow: ['ViewChannel', 'SendMessages'],
        },
        {
          id: adminRole.id,
          allow: ['ViewChannel', 'SendMessages'],
        },
      ],
    });

    const spectatorChannel = await guild.channels.create({
      name: 'spectator-lounge',
      type: ChannelType.GuildText,
      parent: category.id,
      permissionOverwrites: [
        {
          id: guild.roles.everyone.id,
          deny: ['ViewChannel'],
        },
        {
          id: spectatorRole.id,
          allow: ['ViewChannel', 'SendMessages'],
        },
        {
          id: adminRole.id,
          allow: ['ViewChannel', 'SendMessages'],
        },
      ],
    });

    const adminChannel = await guild.channels.create({
      name: 'tournament-admin',
      type: ChannelType.GuildText,
      parent: category.id,
      permissionOverwrites: [
        {
          id: guild.roles.everyone.id,
          deny: ['ViewChannel'],
        },
        {
          id: adminRole.id,
          allow: ['ViewChannel', 'SendMessages'],
        },
      ],
    });

    const embed = new EmbedBuilder()
      .setTitle(`${name} Tournament Created`)
      .setDescription(`**Max Participants:** ${maxParticipants}\nRoles and channels have been created.`)
      .setColor(0x00AE86)
      .setTimestamp();

    // Optional: Save tournament data to your DB here

    await interaction.reply({ embeds: [embed], ephemeral: true });
  }
};